import { NestedStack } from 'aws-cdk-lib';
import { Construct } from 'constructs';
import { Configurations } from '../../../../../configurations';
import { AccountingOffice } from './tables/accounting-office.table';
import { AgencyCompany } from './tables/agency-company.table';
import { Agency } from './tables/agency.table';
import { AppleSubscriptions } from './tables/apple-subscriptions.table';
import { ArcEvent } from './tables/arc-event.table';
import { Auditory } from './tables/auditory.table';
import { BankAccount } from './tables/bank-account.table';
import { BillingType } from './tables/billing-type.table';
import { BundleCodes } from './tables/bundle-codes.table';
import { Campaign } from './tables/campaign.table';
import { Code } from './tables/code.table';
import { Commercial } from './tables/commercial.table';
import { CompanyAccounts } from './tables/company-accounts.table';
import { CompanyComments } from './tables/company-comments.table';
import { CompanyInvoice } from './tables/company-invoice.table';
import { CompanyOffer } from './tables/company-offer.table';
import { CompanySubscription } from './tables/company-subscription.table';
import { CompanyUpgradeDowngradeProducts } from './tables/company-upgrade-downgrade-products.table';
import { Company } from './tables/company.table';
import { Country } from './tables/country.table';
import { Dir3 } from './tables/dir3.table';
import { Errors } from './tables/errors.table';
import { EstablishmentLicenses } from './tables/establishment-licenses.table';
import { EstablishmentSessions } from './tables/establishment-sessions.table';
import { EventStoreTable } from './tables/event-store-table.table';
import { Face } from './tables/face.table';
import { GenerateDocumentRequest } from './tables/generate-document-request.table';
import { Gifts } from './tables/gifts.table';
import { InvoiceConfig } from './tables/invoice-config.table';
import { InvoiceDetail } from './tables/invoice-detail.table';
import { LinkedProducts } from './tables/linked-products.table';
import { ManagementOrgan } from './tables/management-organ.table';
import { ManagerSubscription } from './tables/manager-subscription.table';
import { Manager } from './tables/manager.table';
import { MerchantOrderDetail } from './tables/merchant-order-detail.table';
import { MultiPurpose } from './tables/multi-purpose.table';
import { Notice } from './tables/notice.table';
import { Offer } from './tables/offer.table';
import { Operation } from './tables/operation.table';
import { PriceStrategy } from './tables/price-strategy.table';
import { ProcessingUnit } from './tables/processing-unit.table';
import { PromotionCodes } from './tables/promotion-codes.table';
import { ProposingOrgan } from './tables/proposing-organ.table';
import { RefundDetail } from './tables/refund-detail.table';
import { Region } from './tables/region.table';
import { RegisterInvoiceHistory } from './tables/register-invoice-history.table';
import { ReusableBundleCodes } from './tables/reusable-bundle-codes.table';
import { Sale } from './tables/sale.table';
import { SapInvoiceSyncHistory } from './tables/sap-invoice-sync-history.table';
import { ShipmentAddress } from './tables/shipment-address.table';
import { Sites } from './tables/sites.table';
import { SubscriptionModel } from './tables/subscription-model.table';
import { SubscriptionsOrigin } from './tables/subscriptions-origin.table';
import { SwgSubscriptions } from './tables/swg-subscriptions.table';
import { UserSubscription } from './tables/user-subscription.table';
import { UserToTerminate } from './tables/user-to-terminate.table';
import { UserUpgradeDowngradeProducts } from './tables/user-upgrade-downgrade-products.table';
import { User } from './tables/user.table';

export class DynamoDb extends NestedStack {
  constructor(scope: Construct) {
    super(scope, Configurations.getStaticStackName(DynamoDb.name));

    new AccountingOffice(this);
    new Agency(this);
    new AgencyCompany(this);
    new ArcEvent(this);
    new Auditory(this);
    new BankAccount(this);
    new Campaign(this);
    new Code(this);
    new Commercial(this);
    new Company(this);
    new CompanyAccounts(this);
    new CompanyComments(this);
    new CompanyInvoice(this);
    new CompanyOffer(this);
    new CompanySubscription(this);
    new CompanyUpgradeDowngradeProducts(this);
    new Country(this);
    new Dir3(this);
    new Errors(this);
    new EstablishmentLicenses(this);
    new EstablishmentSessions(this);
    new EventStoreTable(this);
    new Face(this);
    new GenerateDocumentRequest(this);
    new InvoiceConfig(this);
    new InvoiceDetail(this);
    new ManagementOrgan(this);
    new Manager(this);
    new ManagerSubscription(this);
    new MultiPurpose(this);
    new Notice(this);
    new Offer(this);
    new Operation(this);
    new PriceStrategy(this);
    new ProcessingUnit(this);
    new ProposingOrgan(this);
    new Region(this);
    new Sale(this);
    new ShipmentAddress(this);
    new SubscriptionModel(this);
    new User(this);
    new UserSubscription(this);
    new UserToTerminate(this);
    new UserUpgradeDowngradeProducts(this);
    new AppleSubscriptions(this);
    new BillingType(this);
    new BundleCodes(this);
    new Gifts(this);
    new LinkedProducts(this);
    new MerchantOrderDetail(this);
    new PromotionCodes(this);
    new RefundDetail(this);
    new RegisterInvoiceHistory(this);
    new ReusableBundleCodes(this);
    new SapInvoiceSyncHistory(this);
    new Sites(this);
    new SubscriptionsOrigin(this);
    new SwgSubscriptions(this);
  }
}
